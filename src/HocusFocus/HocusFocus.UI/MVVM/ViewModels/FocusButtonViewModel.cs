using System.Diagnostics;using System.Windows.Input;using HocusFocus.Core;namespace HocusFocus.UI.MVVM.ViewModels;public class FocusButtonViewModel : Bindable{    private readonly ProcessController _processController;    private bool _focusModeActive;    public FocusButtonViewModel(ProcessController processController)    {        _processController = processController;        ToggleFocusMode = new RelayCommand(ToggleFocusModeExecute, obj => true);    }    public ICommand ToggleFocusMode { get; }    public string FocusModeButtonText =>        _focusModeActive ? "Deactivate Focus Mode" : "Activate Focus Mode";    private void ToggleFocusModeExecute(object obj)    {        _focusModeActive = !_focusModeActive;        OnPropertyChanged(nameof(FocusModeButtonText));        if (_focusModeActive)        {            _processController.StartMonitoring();            Debug.WriteLine("Focus Mode Activated");        }        else        {            _processController.StopMonitoring();            Debug.WriteLine("Focus Mode Deactivated");        }    }}