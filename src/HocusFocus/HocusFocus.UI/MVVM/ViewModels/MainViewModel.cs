using System.Collections.ObjectModel;using HocusFocus.Core;namespace HocusFocus.UI.MVVM.ViewModels;public class MainViewModel : Bindable{    private bool _allAppsSelected;    public MainViewModel()    {        ProcessItems = new ObservableCollection<ProcessViewModel>();        AppManager = new AppManager();        ConfigurationManager = new ConfigurationManager();        ProcessController = new ProcessController(ConfigurationManager);        BlacklistConfig = ConfigurationManager.LoadConfiguration();        AppManager.GetAllInstalledApps().ForEach(process => ProcessItems.Add(            new ProcessViewModel(process.Name,                BlacklistConfig.BlockedApps.Contains(process.Name))));    }    private AppManager AppManager { get; }    private BlacklistConfig BlacklistConfig { get; }    private ConfigurationManager ConfigurationManager { get; }    private ProcessController ProcessController { get; set; }    public ObservableCollection<ProcessViewModel> ProcessItems { get; set; }    public bool AllAppsSelected    {        get => _allAppsSelected;        set        {            if (_allAppsSelected == value) return;            _allAppsSelected = value;            OnPropertyChanged(nameof(AllAppsSelected));            foreach (var item in ProcessItems) item.IsChecked = _allAppsSelected;        }    }}