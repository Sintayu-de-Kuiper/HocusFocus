using System.Collections.ObjectModel;using System.ComponentModel;using HocusFocus.UI.MVVM.Models;namespace HocusFocus.UI.MVVM.ViewModels;public class MainViewModel : INotifyPropertyChanged{    private bool _selectAll;    public MainViewModel()    {        ProcessItems = new ObservableCollection<ProcessItem>        {            new() { Name = "Item 1" },            new() { Name = "Item 2" },            new() { Name = "Item 3" }        };    }    public ObservableCollection<ProcessItem> ProcessItems { get; set; }    public bool SelectAll    {        get => _selectAll;        set        {            if (_selectAll != value)            {                _selectAll = value;                OnPropertyChanged(nameof(SelectAll));                foreach (var item in ProcessItems) item.IsChecked = _selectAll;            }        }    }    public event PropertyChangedEventHandler PropertyChanged;    protected void OnPropertyChanged(string propertyName)    {        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));    }}