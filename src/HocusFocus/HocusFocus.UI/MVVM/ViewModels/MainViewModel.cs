using System.Collections.ObjectModel;using System.Diagnostics;using System.Windows.Input;using HocusFocus.Core;namespace HocusFocus.UI.MVVM.ViewModels;public class MainViewModel : Bindable{    public MainViewModel()    {        ProcessItems = new ObservableCollection<ProcessViewModel>();        AppManager = new AppManager();        ConfigurationManager = new ConfigurationManager();        ProcessController = new ProcessController(ConfigurationManager);        BlacklistConfig = ConfigurationManager.LoadConfiguration();        AppManager.GetAllInstalledApps().ForEach(process => ProcessItems.Add(            new ProcessViewModel(process.Name,                BlacklistConfig.BlockedApps.Contains(process.Name))));        foreach (var app in ProcessItems) app.PropertyChanged += OnCheckboxChecked;        ToggleFocusMode = new RelayCommand(ToggleFocusModeExecute, obj => true);    }    public ICommand ToggleFocusMode { get; set; }    private bool FocusModeActive { get; set; }    public string FocusModeButtonText =>        FocusModeActive ? "Deactivate Focus Mode" : "Activate Focus Mode";    public ObservableCollection<ProcessViewModel> ProcessItems { get; set; }    private AppManager AppManager { get; }    private BlacklistConfig BlacklistConfig { get; }    private ConfigurationManager ConfigurationManager { get; }    private ProcessController ProcessController { get; }    private void ToggleFocusModeExecute(object obj)    {        FocusModeActive = !FocusModeActive;        OnPropertyChanged(nameof(FocusModeButtonText));        if (FocusModeActive)        {            ProcessController.StartMonitoring();            Debug.WriteLine("Focus Mode Activated");        }        else        {            ProcessController.StopMonitoring();            Debug.WriteLine("Focus Mode Deactivated");        }    }    private void OnCheckboxChecked(object? sender, EventArgs e)    {        var processViewModel = (ProcessViewModel)sender;        if (processViewModel.IsChecked)            BlacklistConfig.BlockedApps.Add(processViewModel.Name);        else            BlacklistConfig.BlockedApps.Remove(processViewModel.Name);        ConfigurationManager.SaveConfiguration(BlacklistConfig);    }}